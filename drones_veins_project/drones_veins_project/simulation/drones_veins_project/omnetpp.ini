[General]
cmdenv-express-mode = true
cmdenv-autoflush = false
cmdenv-status-frequency = 10s
**.cmdenv-log-level = info

image-path = ../../images

network = DronesScenario

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = true

sim-time-limit = 600s

**.scalar-recording = true
**.vector-recording = true


##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = true

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.obstacles = xmldoc("drones-config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")
*.obstacles.additionalObstaclesXml = xmldoc("drones.poly.xml")

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 1s
*.manager.host = "localhost"
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("drones.launchd.xml")
*.manager.configFile = "drones.sumo.cfg"

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.mac1609_4.bitrate = 6Mbps
*.**.nic.phy80211p.minPowerLevel = -110dBm

*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -98dBm

*.**.nic.phy80211p.decider = xmldoc("drones-config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("drones-config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

*.**.nic.phy80211p.antenna = xmldoc("drones-antenna.xml", "/root/Antenna[@id='monopole']")
*.node[*].nic.phy80211p.antennaOffsetY = 0 m
*.node[*].nic.phy80211p.antennaOffsetZ = 1.895 m

##########################################################
#                      App Layer                         #
##########################################################
*.node[*].applType = "CarApplicationLayer"
*.node[*].appl.headerLength = 80 bit
*.node[*].appl.sendBeacons = false
*.node[*].appl.dataOnSch = false
*.node[*].appl.beaconInterval = 1s

*.drone[*].appl.headerLength = 80 bit
*.drone[*].appl.sendBeacons = false
*.drone[*].appl.dataOnSch = false
*.drone[*].appl.beaconInterval = 1s

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 0
*.node[*].veinsmobility.setHostSpeed = false
*.node[0].veinsmobility.accidentCount = 1
*.node[0].veinsmobility.accidentStart = 73s
*.node[0].veinsmobility.accidentDuration = 600s

# Drones' mobility (affects only pre-defined drones. To configure dynamically-spawned
# drones, use DroneManager)
*.drone[*].mobility.x = 0
*.drone[*].mobility.y = 0
*.drone[*].mobility.z = 50
*.drone[*].mobility.initialHeightMin = 50
*.drone[*].mobility.initialHeightMax = 200

*.droneManager.numberOfDrones = 20
*.node[*].nodeOsgVisualizer.scale = 2.0
*.drone[*].nodeOsgVisualizer.scale = 10.0

*.obstacleShadowingVisualizer.enabled = false

*.*.appl.rebroadcastDecider.rebroadcastProbability = 0.5

*.playgroundSizeZ = 1000m



[Config Evaluation]
*.vector-recording = false
warmup-period = 10s
**.cmdenv-log-level = error
*.*.appl.rebroadcastDecider.showBubbles = true
*.pathfinder.sumoNetworkXml = xmldoc("drones.net.xml")
*.playgroundSizeX = 2150.00m
*.playgroundSizeY = 2150.00m
*.node[*].appl.jammingAnnouncementEnabled = true
*.node[*].appl.sendBeacons = false
# *.node[*].appl.drawVehicleRoute = false
*.drone[*].appl.sendBeacons = false
*.manager.updateInterval = 1s
*.droneManager.updateInterval = 1s
*.node[*].veinsmobility.accidentCount = 1
*.node[*].veinsmobility.accidentStart = 15s
*.node[*].veinsmobility.accidentDuration = 3600s
*.traciScenarioManagerType = "org.car2x.veins.modules.mobility.traci.TraCIScenarioManagerForker"
*.manager.commandLine = "$command --remote-port $port --seed $seed --configuration-file $configFile --time-to-teleport -1"
*.node[*].appl.rebroadcastDecider.averageTransmissionRange = 150m
*.drone[*].appl.rebroadcastDecider.averageTransmissionRange = 500m
repeat = 500

[Config Evaluation-Debug]
extends=Evaluation
*.vector-recording = false
warmup-period = 10s
*.obstacleShadowingVisualizer.enabled = true
*.droneManager.numberOfDrones = 10
*.inserter.numVehicles = ${NumberOfVehicles=5}
*.node[1..10].veinsmobility.accidentProbability = 0
*.node[0].veinsmobility.accidentProbability = 1
*.manager.command = "sumo-gui"
repeat = 3


[Config Evaluation-NumberOfVehicles]
extends=Evaluation
*.vector-recording = false
warmup-period = 10s
*.node[*].appl.drawVehicleRoute = false
*.droneManager.numberOfDrones = ${NumberOfDrones=0..100 step 25}
*.inserter.numVehicles = ${NumberOfVehicles=25..100 step 25}
*.node[*].veinsmobility.accidentProbability = ${AccidentProbability=0.3}
repeat = 500

[Config Evaluation-AccidentProbability]
extends=Evaluation
*.vector-recording = false
warmup-period = 10s
*.node[*].appl.drawVehicleRoute = false
*.droneManager.numberOfDrones = ${NumberOfDrones=0..100 step 25}
*.inserter.numVehicles = ${NumberOfVehicles=60}
*.node[*].veinsmobility.accidentProbability = ${AccidentProbability=0.2..0.6 step 0.2}
repeat = 500

[Config Evaluation-DroneHeight]
extends=Evaluation
*.vector-recording = false
warmup-period = 10s
*.node[*].appl.drawVehicleRoute = false
*.droneManager.numberOfDrones = ${NumberOfDrones=50}
*.inserter.numVehicles = ${NumberOfVehicles=50}
*.node[*].veinsmobility.accidentProbability = ${AccidentProbability=0.3}
*.drone[*].mobility.initialHeightMin = ${DroneHeightMin=50..500 step 50}
*.drone[*].mobility.initialHeightMax = ${DroneHeightMax=100..550 step 50 ! DroneHeightMin}
repeat = 500


[Config SimpleSetup]
*.pathfinder.sumoNetworkXml = xmldoc("drones-simple.net.xml")
extends=Evaluation
*.vector-recording = false
warmup-period = 10s
repeat = 1
*.manager.launchConfig = xmldoc("drones-simple.launchd.xml")
*.manager.configFile = "drones-simple.sumo.cfg"
*.obstacles.additionalObstaclesXml = xmldoc("drones-simple.poly.xml")
*.playgroundSizeX = 800.00m
*.playgroundSizeY = 800.00m
*.node[*].appl.sendBeacons = false
*.drone[*].appl.sendBeacons = false
*.droneManager.numberOfDrones = 6
*.inserter.numVehicles = ${NumberOfVehicles=1}
*.node[0].veinsmobility.accidentProbability = 1
*.node[0].appl.drawVehicleRoute = false
*.*.appl.rebroadcastDecider.showBubbles = true



